#!/usr/bin/env python3.5
# -*- coding: utf-8 -*-
import sys
import os

from PyQt5.QtGui import QGuiApplication
from PyQt5.QtQml import QQmlApplicationEngine
from PyQt5.QtCore import QObject, QThread, QSettings, pyqtSignal, pyqtSlot

from ftplib import FTP


COMPANY = 'ARKZilla'


class Loader(QObject):

    def __init__(self, host, login, password, remotePath, parent=None):
        super().__init__(parent)

        self.__host = host
        self.__login = login
        self.__password = password
        self.__remotePath = remotePath

    testResult = pyqtSignal(bool, arguments=['testResult'])

    @pyqtSlot()
    def testConnection(self):
        ftp = FTP()
        try:
            ftp.connect(self.__host, timeout=5)
            result = ftp.login(user=self.__login, passwd=self.__password)
            print(result)
            self.testResult.emit(True)
        except Exception as err:
            print('error connect: {}'.format(str(err)))
            self.testResult.emit(False)
        finally:
            ftp.close()


class ARKZilla(QObject):

    def __init__(self, parent=None):
        super().__init__(parent)

        self.__loadSettings()

    testResult = pyqtSignal(bool, arguments=['testResult'])

    def __loadSettings(self):
        settings = QSettings(COMPANY, sys.argv[0])
        self.__settings = dict()
        self.__settings['host'] = settings.value('host', type=str)
        self.__settings['login'] = settings.value('login', 'anonymous', type=str)
        self.__settings['password'] = settings.value('password', type=str)
        self.__settings['remotePath'] = settings.value('remotePath', '/', type=str)

    @pyqtSlot()
    def settingsChanged(self):
        self.loadSettings()

    @pyqtSlot()
    def testConnection(self):
        self.thread = QThread()
        self.loader = Loader(**self.__settings)
        self.loader.testResult.connect(self.testResult)
        self.thread.started.connect(self.loader.testConnection)
        self.loader.moveToThread(self.thread)
        self.thread.start()


if __name__ == "__main__":
    # Set Material Design style
    os.environ["QT_QUICK_CONTROLS_STYLE"] = "Material"

    app = QGuiApplication(sys.argv)
    app.setOrganizationName(COMPANY)
    app.setApplicationName(sys.argv[0])

    arkzilla = ARKZilla()

    engine = QQmlApplicationEngine()
    engine.rootContext().setContextProperty('arkzilla', arkzilla)
    engine.load("main.qml")
    engine.quit.connect(app.quit)

    sys.exit(app.exec_())
